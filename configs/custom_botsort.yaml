# 自定義 BoTSORT 追蹤器配置 - 啟用 ReID 功能
# 適用於人員重識別場景

# 追蹤器類型
tracker_type: botsort

# 檢測關聯閾值
track_high_thresh: 0.3      # 第一次關聯的信心度閾值，提高可減少假陽性
track_low_thresh: 0.1       # 第二次關聯的較低閾值，允許更寬鬆的匹配
new_track_thresh: 0.4       # 創建新軌跡的閾值，提高可減少噪聲軌跡

# 軌跡管理
track_buffer: 50            # 軌跡丟失後保持的幀數，增加可提高遮擋處理
match_thresh: 0.8           # 匹配軌跡的閾值。 數值越高，匹配越寬鬆。

# 分數融合
fuse_score: true            # 融合檢測分數和 IoU，提高匹配準確性

# 全域運動補償（處理相機移動）
gmc_method: sparseOptFlow   # 使用稀疏光流進行運動補償
# 或使用 ecc / sift / orb / none

# 固定相機、偶發震動/微幅搖晃（常見於戶外桿位/吊車振動）
#   首選：ecc 或 sparseOptFlow
#   取捨：追求穩定→ecc；追求效能/即時→sparseOptFlow
# 有慢速平移/輕度 PTZ（偶爾人工調整視角）
#   首選：sparseOptFlow
# 若畫面紋理稀疏、光照變化大且算力足夠→sift
#   頻繁/快速的平移或變焦（移動攝影、車載/船載畫面）
#   首選：sift（最穩），算力有限則退而求其次用 orb
# 完全穩定、幾乎無抖動的固定監視器
#   選擇：none（省計算，追蹤已足夠穩定）

# 實務上對港口（人員、貨櫃車、機車等多目標）且要即時：
#   建議預設用 sparseOptFlow（效能/穩定兼顧）
#   若畫面幾乎不動，只是偶爾微震，且你更重視穩定性，可改 ecc
#   若相機偶爾快速平移或場景紋理少、陰影變化大且 GPU/CPU 有餘裕，考慮 sift

# ReID（重新識別）設定
with_reid: true             # 啟用基於外觀的重新識別
proximity_thresh: 0.3       # ReID 匹配前的最小 IoU 要求
appearance_thresh: 0.15     # ReID 的外觀相似度閾值，降低可提高重識別率
model: auto                 # 自動選擇 ReID 模型。默认为 auto，如果检测器是 YOLO，则使用原生特征，否则使用 yolo11n-cls.pt.
